const mongoose = require('mongoose');
const Employee = require('./models/user/employee.schema');
const bcrypt = require('bcryptjs');

// ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ MongoDB
mongoose.connect('mongodb://localhost:27017/hotel_sleep_gun', {
  useNewUrlParser: true,
  useUnifiedTopology: true,
});

async function testCreateEmployee() {
  try {
    console.log('üîÑ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á employee...');

    // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• employee ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á
    const employeeData = {
      username: 'test_employee',
      password: 'password123',
      firstname: '‡∏ó‡∏î‡∏™‡∏≠‡∏ö',
      lastname: '‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô',
      nickname: '‡∏ó‡∏î‡∏™‡∏≠‡∏ö',
      sex: '‡∏ä‡∏≤‡∏¢',
      email: 'test@example.com',
      phone: '0812345678',
      employeeCode: 'EMP001',
      positionEmployee: '‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö',
      statusByPartner: 'employee',
      partnerId: '507f1f77bcf86cd799439011' // ObjectId ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á
    };

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ username ‡∏ã‡πâ‡∏≥‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    const existingEmployee = await Employee.findOne({ username: employeeData.username });
    if (existingEmployee) {
      console.log('‚ö†Ô∏è Username ‡∏ô‡∏µ‡πâ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏•‡πâ‡∏ß');
      return;
    }

    // ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏´‡∏±‡∏™ password
    const hashedPassword = await bcrypt.hash(employeeData.password, 10);

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á employee ‡πÉ‡∏´‡∏°‡πà
    const employee = new Employee({
      ...employeeData,
      password: hashedPassword
    });

    const savedEmployee = await employee.save();
    console.log('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á employee ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', savedEmployee);

  } catch (error) {
    console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', error);
  } finally {
    mongoose.connection.close();
  }
}

// ‡∏£‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö
testCreateEmployee(); 